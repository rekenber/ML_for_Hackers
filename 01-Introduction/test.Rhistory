library(ggplot2)
install.packages("ggplot")
install.packages("ggplot2")
?read.delim
?read.csv
ufo <- read.delim("data/ufo/ufo_awesome.tsv",sep="\t",stringAsFactors=FALSE,header=FALSE,na.strings="")
ufo <- read.delim("data/ufo/ufo_awesome.tsv",sep="\t",stringsAsFactors=FALSE,header=FALSE,na.strings="")
View(ufo)
names(ufo)<-c("DateOccurred","DateReported","Location","ShortDescription","Duration","LongDescription")
View(ufo)
View(ufo)
View(ufo)
ufo$DateOccurred <- as.Date(ufo$DateOccurred, format="%Y%m%d")
heads(ufo)
head(ufo)
ufo[which(nchar(ufo$DateOccurred)!=8|nchar(ufo$DateReported)!=8),1]
head(ufo[which(nchar(ufo$DateOccurred)!=8|nchar(ufo$DateReported)!=8),1])
which
?which
good
good.rows <- ifelse(nchar(ufo$DateOccurred>!=8 | nchar(ufo$DateReported)!=8,FALSE,TRUE))
good.rows <- ifelse(nchar(ufo$DateOccurred)!=8 | nchar(ufo$DateReported)!=8,FALSE,TRUE))
good.rows <- ifelse(nchar(ufo$DateOccurred)!=8 | nchar(ufo$DateReported)!=8,FALSE,TRUE)
length(which(!good.rows))
ufo[1]
head(ufo[1])
head(ufo[1,])
ufo <- ufo[good.rows,]
gef.location <- function(l){}
gef.location <- function(l){
split.location <- tryCatch(strsplit(l,",")[[1]],error = function(e) return(c(NA,NA)))
clean.location <- gsub("^ ","",split.location)
if(length(clean.location)>2){ return (c(NA,NA))}
else { return (clean.location)}
}
city.state <- lapply(ufo$Location,get.location)
city.state <- lapply(ufo$Location,gef.location)
head(city.state)
location.matrix <- do.call(rbind, city.state)
ufo <- transform(ufo, USCity = location.matrix[,1],USSate=tolower(location.matrix[,2]),stringsAsFactors=FALSE)
us.states <- c("ak","al","ar","az","ca","co","ct","de","fl","ga","hi","ia","id","il","in","ks","ky","la","ma","md","me","mi","mn","mo","ms","mt","nc","nd","ne","nh","nj","nm","nv","ny","oh","ok","or","pa","ri","sc","sd","tn","tx","ut","va","vt","wa","wi","wu","wy")
ufo$USSate <- us.states[match(ufo$USState,us.states)]
ufo$USSate <- us.states[match(ufo$USSate,us.states)]
View(ufo)
View(ufo)
ufo$USCity[is.na(ufo$USSate)] <- NA
View(ufo)
View(ufo)
head(ufo)
ufo.us <- subset(ufo, !is.na(USSate))
summary(ufo.us$DateOccurred)
summary(ufo.us$DateOccurred)
ufo.us$DateOccurred <- as.Date(ufo$DateOccurred,format="%Y%m%d")
ufo.us$DateOccurred <- as.Date(ufo.us$DateOccurred,format="%Y%m%d")
ufo.us$DateReported <- as.Date(ufo.us$DateReported,format="%Y%m%d")
view(ufo)
view(ufo.us)
View(ufo.us)
View(ufo.us)
summary(ufo.us$DateOccurred)
quick.hist <- ggplot(ufo.us, aes(x=DateOccurred))+geom_histogram()+scale_x_date(major="50 years")
quick.hist <- ggplot2(ufo.us, aes(x=DateOccurred))+geom_histogram()+scale_x_date(major="50 years")
quick.hist <- ggplot(ufo.us, aes(x=DateOccurred))+geom_histogram()+scale_x_date(major="50 years")
quick.hist <- ggplot(ufo.us, aes(x = DateOccurred)) +
geom_histogram() +
scale_x_date(breaks = "50 years")
install.packages("ggplot")
options(repos=structure(c(CRAN="http://cran.stat.auckland.ac.nz/")))
cran.packages <- c("e1071",
"ggplot2",
"glmnet",
"Hmisc",
"igraph",
"lme4",
"lubridate",
"plyr",
"RCurl",
"reshape",
"RJSONIO",
"scales",
"tm",
"XML")
cat("This script will now attempt to install all of the R packages used in 'Machine Learning for Hackers'")
for(p in cran.packages) {
if(!suppressWarnings(require(p, character.only = TRUE, quietly = TRUE))) {
cat(paste(p, "missing, will attempt to install\n"))
install.packages(p, dependencies = TRUE, type = "source")
}
else {
cat(paste(p, "installed OK\n"))
}
}
print("### All required packages installed ###")
install.packages(p, dependencies = TRUE, type = "source")
quick.hist <- ggplot(ufo.us, aes(x=DateOccurred))+geom_histogram()+scale_x_date(major="50 years")
savehistory(file = "test.Rhistory")
